> Example Request: Send Row

```shell
curl https://api.smartsheet.com/2.0/sheets/{sheetId}/rows/{rowId}/emails \
-H "Authorization: Bearer ll352u9jujauoqz4gstvsae05" \
-H "Content-Type: application/json" \
-X POST \
-d '{ \
    "sendTo": [ \
        {"email": "recipient@smartsheet.com"} \
    ], \
    "subject": "some subject", \
    "message": "some message", \
    "ccMe": false, \
    "columnIds": [ \
        cId1, \
        cId2 \
    ], \
    "includeAttachments": false, \
    "includeDiscussions": false \
}'
```

```javascript
// Configure email.
var email = {
    "sendTo": [
        {
            "email": "john.doe@smartsheet.com"
        },
        {
            "groupId": 2258118617917316
        }
    ],
    "subject": "Check these rows out!",
    "message": "Here are the rows I mentioned in our meeting",
    "ccMe": false,
    "includeDiscussions": false,
    "includeAttachments": true
};

// Set options.
var options = {
    body: email,
    sheetId: 2252168947361668,
    rowId: 4293147074291588
};

// Send row via email.
smartsheet.sheets.sendRow(options)
    .then(function (data) {
        console.log(data);
    })
    .catch(function (error) {
        console.log(error);
    });
```

```csharp
// Specify recipients.
Recipient[] recipients = new Recipient[] {
    new Recipient { Email = "john.doe@smartsheet.com" },
    new Recipient { GroupId = 2258118617917316 }
};

// Configure email.
RowEmail rowEmail = new RowEmail {
    SendTo = recipients,
    Subject = "Check these rows out!",
    Message = "Here are the rows I mentioned in our meeting",
    CcMe = false,
    IncludeAttachments = true,
    IncludeDiscussions = false
};

// Send row via email.
smartsheet.SheetResources.RowResources.SendRow(2252168947361668, 4293147074291588, rowEmail);      // sheetId, rowId
```

```java
// Specify individual recipient.
RecipientEmail recipientEmail = new RecipientEmail.AddRecipientEmailBuilder()
    .setEmail("john.doe@smartsheet.com")
    .build();

// Specify group recipient.
RecipientGroup recipientGroup = new RecipientGroup.AddRecipientGroupBuilder()
    .setGroupId(2258118617917316L)
    .build();

// Set recipients.
List<Recipient> recipients = Arrays.asList(recipientEmail, recipientGroup);

// Set format details.
FormatDetails formatDetails = new FormatDetails();
formatDetails.setPaperSize(PaperSize.A0);

// Configure email.
RowEmail email = new RowEmail.AddRowEmailBuilder()
    .setSendTo(recipients)
    .setSubject("Check these rows out!")
    .setMessage("Here are the rows I mentioned in our meeting")
    .setCcMe(false)
    .setIncludeAttachments(true)
    .setIncludeDiscussions(true)
    .build();

// Send row via email.
smartsheet.sheetResources().rowResources().sendRow(2252168947361668L, 4293147074291588L, email);        // sheetId, rowId
```

> Example Response:

```json
{
    "message": "SUCCESS",
    "resultCode": 0
}
```

`POST /sheets/{sheetId}/rows/{rowId}/emails`

Sends a Row via email.

     |     |
-----|-----|
<%= SCOPE %> | SHARE_SHEETS
<%= HEADERS %> | <%= HEADER_AUTH %><br/><%= HEADER_CT_JSON %>
<%= REQUEST %> | [RowEmail Object](#rowemail-object). If **columnIds** is null, all columns except hidden columns shall be included. If it is empty, no columns shall be included: if empty, either **includeAttachments** or **includeDiscussions** must be specified.
<%= RETURNS %> | [Result Object](#result-object)
